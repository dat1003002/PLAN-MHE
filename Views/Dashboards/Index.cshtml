@using System.Collections.Generic
@{
	ViewData["Title"] = "Trang Chủ";

	var recentPlans = ViewData["RecentPlans"] as List<Dictionary<string, object>> ?? new List<Dictionary<string, object>>();
	var totalPlans = ViewData["TotalPlans"] as int? ?? 0;
	var completedPlans = ViewData["CompletedPlans"] as int? ?? 0;
	var activePlans = ViewData["ActivePlans"] as int? ?? 0;
}

<div class="quick-links-container">
	<div class="quick-links-header">
		<i class="ace-icon fa fa-link"></i>
		<strong>LIÊN KẾT NHANH</strong>
	</div>
	<div class="quick-links-wrapper">

		<!-- Danh Sách Kế Hoạch -->
		<div class="quick-link-item ql-checklist">
			<i class="ace-icon fa fa-list-alt"></i>
			<div class="title">Danh Sách Kế Hoạch</div>
			<span class="badge-count">@totalPlans</span>
		</div>

		<!-- Đang Thực Hiện -->
		<div class="quick-link-item ql-pending">
			<i class="ace-icon fa fa-check-square-o"></i>
			<div class="title">Đang Thực Hiện</div>
			<span class="badge-count">@activePlans</span>
		</div>

		<!-- Đã Hoàn Thành -->
		<div class="quick-link-item ql-approved">
			<i class="ace-icon fa fa-check-circle"></i>
			<div class="title">Đã Hoàn Thành</div>
			<span class="badge-count">@completedPlans</span>
		</div>

		<!-- Lịch Sử (tạm để 0 hoặc có thể mở rộng sau) -->
		<div class="quick-link-item ql-rejected">
			<i class="menu-icon bx bxs-spreadsheet"></i>
			<div class="title">Lịch Sử</div>
			<span class="badge-count">@completedPlans</span>
		</div>

	</div>
</div>

<div class="stats-container">
	<div class="stats-header">
		<i class="ace-icon fa fa-bar-chart"></i> Thống Kê Số Lượng Kế Hoạch
	</div>
	<div class="chart-container">
		<canvas id="completionChart"></canvas>
	</div>
</div>
<script>
	document.addEventListener('DOMContentLoaded', function () {
		const ctx = document.getElementById('completionChart').getContext('2d');
		const labels = ['Đang thực hiện', 'Đã hoàn thành', 'Danh sách kế hoạch'];
		const data = [@activePlans, @completedPlans, @totalPlans];
		const backgroundColors = ['#FFA500', '#008000', '#1E90FF'];
		const borderColors = ['#CD8500', '#006400', '#1C86EE'];

		new Chart(ctx, {
			type: 'bar',
			data: {
				labels: labels,
				datasets: [{
					label: 'Số lượng kế hoạch',
					data: data,
					backgroundColor: backgroundColors,
					borderColor: borderColors,
					borderWidth: 1,

					// === GIẢI PHÁP 1: Đặt chiều rộng cố định (khuyến nghị) ===
					barThickness: 40,  // Giá trị từ 20-60px là đẹp cho màn hình desktop

					// === HOẶC GIẢI PHÁP 2: Dùng tỷ lệ (nếu muốn responsive hơn) ===
					// categoryPercentage: 0.6,
					// barPercentage: 0.7
				}]
			},
			options: {
				responsive: true,
				maintainAspectRatio: false,
				plugins: {
					legend: {
						position: 'top',
						labels: { boxWidth: 10, font: { size: 12 } }
					}
				},
				scales: {
					x: {
						grid: { display: false }
					},
					y: {
						beginAtZero: true,
						title: { display: true, text: 'Số lượng' },
						ticks: {
							stepSize: 1,
							callback: function (value) {
								return Number.isInteger(value) ? value : null;
							}
						}
					}
				}
			}
		});
	});
</script>
