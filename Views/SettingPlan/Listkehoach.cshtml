<div class="main-box">
	<div class="header-section">
		<div class="left-icon"><i class="ace-icon fa fa-star orange"></i></div>
		<div class="page-title">Danh Sách Kế Hoạch</div>
		<div class="right-settings"><i class="fa fa-regular fa-gear"></i></div>
	</div>
</div>
<div class="main-container">
	<div class="search-area">
		<input type="text" id="searchUsername" placeholder="Tên Kế Hoạch">
	</div>
	<div class="options">
		<label><input type="radio" name="status" value="all" checked> Tất cả</label>
		<label class="status-using"><input type="radio" name="status" value="active"> Đang thực hiện</label>
		<label class="status-deleted"><input type="radio" name="status" value="deleted">Đã Hoàn Thành</label>
	</div>
</div>
<table>
	<thead>
		<tr class="mvc-grid-headers">
			<th style="width: 5%;">STT</th>
			<th style="width: 30%;">Tên Kế Hoạch</th>
			<th style="width: 15%;">Ngày Bắt Đầu</th>
			<th style="width: 15%;">Ngày Kết Thúc</th>
			<th style="width: 15%;">Trạng thái</th>
			<th style="width: 15%;">HOẠT ĐỘNG</th>
		</tr>
	</thead>
	<tbody>
		@{
			int stt = (ViewBag.CurrentPage - 1) * 10 + 1;
			foreach (var plan in Model)
			{
				<tr class="data-row" data-plan-id="@plan.Id">
					<td style="width: 5%;">@stt</td>
					<td style="width: 25%;"><a href="@Url.Action("Detail", "DetailSettingPlan", new { id = plan.Id })" style="color:#337ab7; text-decoration:none;">@plan.Name</a></td>
					<td style="width: 20%;">@plan.StartDate.ToString("dd/MM/yyyy")</td>
					<td style="width: 20%;">@plan.EndDate.ToString("dd/MM/yyyy")</td>
					<td style="width: 15%;">
						@if (plan.Status == "Active")
						{
							<button style="background-color: #28a745; color: white; border: none; padding: 2px 10px; border-radius: 4px; font-size: 10px;">
								Đang sử dụng
							</button>
						}
					</td>
					<td style="width: 10%;">
						<button onclick="openEditModal(@plan.Id, '@plan.Name', '@plan.StartDate.ToString("yyyy-MM-dd")', '@plan.EndDate.ToString("yyyy-MM-dd")', '@plan.Description')" style="border-radius: 3px; background-color: #428BCA; color: white; border: 1px solid #2E6589; border-bottom-width: 2px; padding: 2px 6px;">
							<i class="ace-icon fa fa-edit bigger-120"></i>
						</button>
						<button onclick="deletePlan(@plan.Id)" style="background-color: #C00000; color: white; border-radius: 3px; border: 1px solid #9c2c18; border-bottom-width: 2px; padding: 2px 6px;">
							<i class="ace-icon fa fa-trash bigger-120"></i>
						</button>
					</td>
				</tr>
				stt++;
			}
		}
	</tbody>
</table>

<!-- Phân trang -->
<div style="display: flex; justify-content: center; margin-top: 20px;">
	<nav aria-label="Page navigation">
		<ul class="pagination">
			<li class="page-item @((ViewBag.CurrentPage == 1) ? "disabled" : "")">
				<a class="page-link" href="@Url.Action("Listkehoach", new { pageNumber = ViewBag.CurrentPage - 1 })" aria-label="Previous">
					<span aria-hidden="true">&laquo;</span>
				</a>
			</li>
			@for (int i = 1; i <= ViewBag.TotalPages; i++)
			{
				<li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
					<a class="page-link" href="@Url.Action("Listkehoach", new { pageNumber = i })">@i</a>
				</li>
			}
			<li class="page-item @((ViewBag.CurrentPage == ViewBag.TotalPages) ? "disabled" : "")">
				<a class="page-link" href="@Url.Action("Listkehoach", new { pageNumber = ViewBag.CurrentPage + 1 })" aria-label="Next">
					<span aria-hidden="true">&raquo;</span>
				</a>
			</li>
		</ul>
	</nav>
</div>

<!-- Modal và script -->
<div id="editModal" class="modal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; justify-content: center; align-items: center;">
	<div class="modal-content" style="background: white; width: 90%; max-width: 500px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,0.3);">
		<div class="modal-header" style="background-color:#438DB8; padding: 5px; border-bottom: 1px solid #ddd; display: flex; justify-content: space-between; align-items: center;">
			<button onclick="closeModal()" style="background: none; color: white; border: 2px solid white; font-size: 20px; cursor: pointer;">&times;</button>
		</div>
		<div class="modal-body" style="padding: 15px;">
			<input type="hidden" id="Id" />
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Tên Kế Hoạch (*)</label>
				<input type="text" id="PlanName" style="width: 100%; padding: 3px; border: 1px solid #ddd; border-radius: 3px;" />
				<span id="PlanNameError" class="text-danger"></span>
			</div>
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Mô Tả</label>
				<textarea id="Description" style="width: 100%; padding: 3px; border: 1px solid #ddd; border-radius: 3px;"></textarea>
				<span id="DescriptionError" class="text-danger"></span>
			</div>
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Ngày Bắt Đầu (*)</label>
				<input type="date" id="StartDate" style="width: 100%; padding: 3px; border: 1px solid #ddd; border-radius: 3px;" />
				<span id="StartDateError" class="text-danger"></span>
			</div>
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Ngày Kết Thúc (*)</label>
				<input type="date" id="EndDate" style="width: 100%; padding: 3px; border: 1px solid #ddd; border-radius: 3px;" />
				<span id="EndDateError" class="text-danger"></span>
			</div>
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Người Thực Hiện (*)</label>
				<div class="select-container" style="width:100%;">
					<div class="select-box" onclick="toggleDropdown()">
						<input type="text" id="searchUser" placeholder="Tìm kiếm người thực hiện" onkeyup="filterUsers()" style="flex-grow: 1; min-width: 100px; order: 1; box-sizing: border-box;">
					</div>
					<div class="dropdown" id="dropdown">
						<div class="option-container">
						</div>
					</div>
				</div>
				<span id="SelectedUserIdsError" class="text-danger"></span>
			</div>
			<div class="form-group" style="margin-bottom: 15px;">
				<label style="display: block; margin-bottom: 5px;">Trạng thái (*)</label>
				<select id="Status" style="width: 100%; padding: 3px; border: 1px solid #ddd; border-radius: 3px;">
					<option value="Active">Đang thực hiện</option>
					<option value="Completed">Ngưng Hoạt Động</option>
				</select>
				<span id="StatusError" class="text-danger"></span>
			</div>
		</div>
		<div class="modal-footer" style="padding: 5px; border-top: 1px solid #ddd; text-align: right;">
			<button onclick="savePlan()" style="padding: 2px 10px; font-size: 13px; border: 1px solid #2E6589; border-radius: 3px; background: #428BCA; color: white; cursor: pointer;">
				<i class="ace-icon fa fa-save"></i>
				Lưu
			</button>
		</div>
	</div>
</div>
<script>
	function toggleDropdown() {
		const dropdown = document.getElementById('dropdown');
		dropdown.classList.toggle('show');
	}
	function removeTag(value) {
		const tag = document.querySelector(`.tag[data-value="${value}"]`);
		if (tag) tag.remove();
		const hiddenInput = document.querySelector(`input[type="hidden"][name="SelectedUserIds"][value="${value}"]`);
		if (hiddenInput) hiddenInput.remove();
		event.stopPropagation();
		const searchInput = document.getElementById('searchUser');
		searchInput.style.order = document.querySelectorAll('.tag').length + 1;
	}
	function filterUsers() {
		const searchInput = document.getElementById('searchUser').value.toLowerCase();
		const options = document.querySelectorAll('.option-container option');
		options.forEach(option => {
			const text = option.textContent.toLowerCase();
			option.style.display = text.includes(searchInput) ? '' : 'none';
		});
		document.getElementById('dropdown').classList.add('show');
	}
	function openEditModal(id, name, startDate, endDate, description) {
		$.ajax({
			url: '@Url.Action("GetAssignedUsers", "SettingPlan")',
			type: 'GET',
			data: { planId: id },
			success: function (response) {
				document.getElementById('editModal').style.display = 'flex';
				document.getElementById('Id').value = id;
				document.getElementById('PlanName').value = name;
				document.getElementById('Description').value = description || '';
				document.getElementById('StartDate').value = startDate;
				document.getElementById('EndDate').value = endDate;
				document.getElementById('Status').value = "Active"; // Mặc định là Active
				const selectBox = document.querySelector('.select-box');
				selectBox.innerHTML = '<input type="text" id="searchUser" placeholder="Tìm kiếm người thực hiện" onkeyup="filterUsers()" style="flex-grow: 1; min-width: 100px; order: 1; box-sizing: border-box;">';
				response.users.forEach(user => {
					const tag = document.createElement('div');
					tag.className = 'tag';
					tag.setAttribute('data-value', user.id);
					tag.innerHTML = `${user.fullName} <span class="remove-tag" onclick="removeTag('${user.id}')">×</span>`;
					selectBox.insertBefore(tag, document.getElementById('searchUser'));
					const hiddenInput = document.createElement('input');
					hiddenInput.type = 'hidden';
					hiddenInput.name = 'SelectedUserIds';
					hiddenInput.value = user.id;
					selectBox.appendChild(hiddenInput);
				});
				document.getElementById('searchUser').style.order = response.users.length + 1;
				$.ajax({
					url: '@Url.Action("GetAllUsers", "SettingPlan")',
					type: 'GET',
					success: function (allUsers) {
						const optionContainer = document.querySelector('.option-container');
						optionContainer.innerHTML = '';
						allUsers.forEach(user => {
							if (!selectBox.querySelector(`.tag[data-value="${user.id}"]`)) {
								const option = document.createElement('option');
								option.value = user.id;
								option.textContent = user.fullName;
								optionContainer.appendChild(option);
							}
						});
						document.querySelectorAll('.option-container option').forEach(option => {
							option.addEventListener('click', () => {
								const value = option.getAttribute('value');
								const text = option.textContent;
								if (!selectBox.querySelector(`.tag[data-value="${value}"]`)) {
									const tag = document.createElement('div');
									tag.className = 'tag';
									tag.setAttribute('data-value', value);
									tag.innerHTML = `${text} <span class="remove-tag" onclick="removeTag('${value}')">×</span>`;
									selectBox.insertBefore(tag, document.getElementById('searchUser'));
									const hiddenInput = document.createElement('input');
									hiddenInput.type = 'hidden';
									hiddenInput.name = 'SelectedUserIds';
									hiddenInput.value = value;
									selectBox.appendChild(hiddenInput);
									document.getElementById('searchUser').style.order = selectBox.querySelectorAll('.tag').length + 1;
									option.remove();
								}
								toggleDropdown();
								document.getElementById('searchUser').value = '';
								filterUsers();
							});
						});
					},
					error: function () {
						alert("Lỗi khi lấy danh sách người dùng.");
					}
				});
			},
			error: function () {
				alert("Lỗi khi lấy danh sách người dùng đã gán.");
			}
		});
	}
	function closeModal() {
		document.getElementById('editModal').style.display = 'none';
		document.getElementById('Id').value = '';
		document.getElementById('PlanName').value = '';
		document.getElementById('Description').value = '';
		document.getElementById('StartDate').value = '';
		document.getElementById('EndDate').value = '';
		document.getElementById('Status').value = 'Active';
		document.querySelector('.select-box').innerHTML = '<input type="text" id="searchUser" placeholder="Tìm kiếm người thực hiện" onkeyup="filterUsers()" style="flex-grow: 1; min-width: 100px; order: 1; box-sizing: border-box;">';
		document.querySelector('.option-container').innerHTML = '';
	}
	function savePlan() {
		const id = parseInt(document.getElementById('Id').value);
		const name = document.getElementById('PlanName').value;
		const description = document.getElementById('Description').value;
		const startDate = document.getElementById('StartDate').value;
		const endDate = document.getElementById('EndDate').value;
		const status = document.getElementById('Status').value;
		const selectedUserIds = Array.from(document.querySelectorAll('input[name="SelectedUserIds"]')).map(input => parseInt(input.value));
		document.getElementById('PlanNameError').textContent = '';
		document.getElementById('StartDateError').textContent = '';
		document.getElementById('EndDateError').textContent = '';
		document.getElementById('SelectedUserIdsError').textContent = '';
		document.getElementById('StatusError').textContent = '';
		if (isNaN(id)) {
			alert("ID kế hoạch không hợp lệ.");
			return;
		}
		if (!name) {
			document.getElementById('PlanNameError').textContent = 'Vui lòng nhập tên kế hoạch.';
			return;
		}
		if (!startDate) {
			document.getElementById('StartDateError').textContent = 'Vui lòng chọn ngày bắt đầu.';
			return;
		}
		if (!endDate) {
			document.getElementById('EndDateError').textContent = 'Vui lòng chọn ngày kết thúc.';
			return;
		}
		if (!selectedUserIds || selectedUserIds.length === 0) {
			document.getElementById('SelectedUserIdsError').textContent = 'Vui lòng chọn ít nhất một người thực hiện.';
			return;
		}
		if (!status) {
			document.getElementById('StatusError').textContent = 'Vui lòng chọn trạng thái.';
			return;
		}
		$.ajax({
			url: '@Url.Action("UpdatePlan", "SettingPlan")',
			type: 'POST',
			contentType: 'application/json',
			data: JSON.stringify({ id: id, name: name, description: description, startDate: startDate, endDate: endDate, status: status, selectedUserIds: selectedUserIds }),
			success: function (response) {
				if (response.success) {
					alert(response.message);
					location.reload();
				} else {
					alert(response.message);
				}
			},
			error: function () {
				alert("Lỗi khi gửi yêu cầu cập nhật kế hoạch.");
			}
		});
	}
	function deletePlan(planId) {
		if (confirm("Bạn có chắc chắn muốn xóa kế hoạch này?")) {
			$.ajax({
				url: '@Url.Action("DeletePlan", "SettingPlan")',
				type: 'POST',
				data: { planId: planId },
				success: function (response) {
					if (response.success) {
						alert(response.message);
						$(`tr[data-plan-id="${planId}"]`).remove();
					} else {
						alert(response.message);
					}
				},
				error: function () {
					alert("Lỗi khi gửi yêu cầu xóa kế hoạch.");
				}
			});
		}
	}
	document.addEventListener('click', (e) => {
		if (!e.target.closest('.select-container')) {
			document.getElementById('dropdown').classList.remove('show');
		}
	});
</script>
